<!DOCTYPE HTML>
<html>
<head>
<title>Stampa formattata</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<script src="printf.js"></script>
<style type="text/css">
<!--
*, *:before, *:after {
  box-sizing: border-box;
}

pre {
	font: 13px/20px "Courier New", Courier, monospace;
	margin: 0;
}

pre b {
	display: inline-block;
	background-color: #ddf;
	width: 100%;
	line-height:24px;
}

.titolo, .by  {
    text-align: center;
    font: bold 25px Arial, Helvetica, sans-serif;
    letter-spacing: 5px;
    color: #C63;
    margin-bottom: 5px;
}

.by {
    font-size: 16px;
    color: #000;
    text-decoration:none;
    text-align: center;
    display: block;
}
.by:hover {
    text-decoration: underline;
    color: #36c;
}
.maintable {
    width: 100%;
    border: none;
    border-spacing: 0;
    padding: 0;
    margin: auto;
}

.testo {
    font: 14px Arial, Helvetica, sans-serif;
    text-align: justify
}
.tabx {
    font: 14px/20px "Courier New", Courier, monospace;
	white-space:pre;
}

.esempio {
    font: 14px "Courier New", Courier, monospace;
    color: #000066;
	margin: 10px auto;
	background-color: #ffe;
	padding: 10px;
	border: 1px solid #aaa;
	text-align: left;
	display: table;
}

.dmx {  font-size: 3px; color: #330099}

.lista {
 	list-style-type: none;
}

.lista li {
	padding: 5px 0;
}

.lista li:first-letter {
	font-weight:bold;
	padding-right: 5px;
}

.tabella {
    border: 1px solid #000;
    border-spacing: 0;
    padding: 0;
    font: 14px/20px "Courier New", Courier, monospace;
    white-space:pre;
    margin:auto;
}

.tabella td {
    border: 1px solid #888;
    border-width: 0 0 1px 1px;
    padding: 8px;
}

.tabella td:first-child {
    border-left: none;
}

.tabella tr:last-child td {
    border-bottom: none;
}

.titolino {
    font: bold 16px Arial, Helvetica, sans-serif;
}
-->
</style>
</head>
<body bgcolor="#FFFFFF">
<div style="width: 650px; margin: auto;border: 1px solid #abc;">
<div class="titolo">- printf -</div>
<a class="by" href="mailto: MaurizioMauri@email.com">by Maurizio Mauri</a>
<br>
<div class="testo">
    Nel javascript manca una funzione che fornisca un output formattato, presente,
    invece, in quasi tutti i linguaggi. Questa mancanza mette spesso in difficolt&agrave;
    gli utenti meno esperti quando devono creare un output formattatto di un semplice numero, ad esempio stampare un importo in euro, con due
    cifre decimali; ma anche buoni programmatori non trovano per niente agevole
    stampare numeri in formati poco usuali come quello esponenziale.<br>
    <br>
    <b><i>printf</i></b> &egrave; una funzione che cerca di sopperire a questa
    mancanza, usando una sintassi simile a quella dell'omonima funzione del
    C, ed &egrave; ormai presente in quasi tutti i linguaggi di programmazione.<br>
    <br>
    Ad esempio, osserviamo la tabella che segue:<br>
    <br>
<div style="width: 380px; border: 1px solid #000; margin: auto">
<pre><b><i>  n.      log(n)        exp(n)         12<sup>n</sup>  </i></b>
<script>
    for (var i = 1; i < 12; i++) {
    printf('  %02d    %8.5d    %10.4d    %5.4e  \n', i, Math.log(i), Math.exp(i), Math.pow(12, i));
    }
    </script></pre>
</div>
<br>
Nella prima colonna è riportato un numero fra 1 e 11;
        i numeri di una sola cifra sono fatti precedere da uno 0.<br>
        Nella seconda vi &egrave; il logaritmo naturale del numero, formattato
        con 5 cifre decimali. Nella terza colonna vi &egrave; l'esponenziale del
        numero con 4 cifre decimali. Infine nell'ultima colonna vi &egrave; la
        potenza, in base 12, del numero, stampata in forma esponeziale e con 4
        cifre decimali.<br>
        <br>
        La tabella &egrave; stata costruita interamente da script con la funzione <em><strong>printf</strong></em>  con quest'unica l'istruzione:<br>
        <dir><span class="esempio">for (var i = 1; i < 12; i++)
          <dir>printf(' %02d %8.5d %10.4d %5.4e \n', i, Math.log(i),<br>
        Math.exp(i), Math.pow(12, i));</dir>
  </span></dir>
<br>
<div class="titolino">Sintassi</div><br>
        La sintassi di <b><i>printf</i></b> &egrave; la seguente:<br>
        <br>
        <dir><span class="esempio"> printf(&quot;stringa di formato&quot;, variabile1,
          variabile2, ...);</span></dir>
        <br>
  ovvero, dovendo stampare <em><strong>n</strong></em> variabili, bisogna passare alla funzione <em><strong>n + 1</strong></em> parametri. Il primo parametro è la stringa di formato.<br>
<br>
La stringa di formato pu&ograve; contenere qualsiasi carattere, oltre
        ai caratteri necessari a formattare i parametri seguenti. Ad esempio,
        con:<br>
        <dir><span class="esempio"> printf(&quot;Il risultato &amp;egrave;: %5.2d\n&quot;,
          result);</span></dir>
        fornir&agrave; un output del tipo:<br>
        <dir><span class="esempio">
        Il risultato &egrave;: 132.54</span></dir>
        viene, cio&egrave;, stampata la stringa di formato; quando viene incontrato
        il carattere &quot;%&quot;, al suo posto viene stampato il corrispondente
        parametro, secondo il formato specificato dopo il carattere.<br>
        <br>
        Il modello generale del formato &egrave; il seguente:<br>
        <dir><span class="esempio"> %[ + | - ] [ 0 ] [ n [ .m] ] X</span></dir>
        I parametri fra parentesi sono opzionali.<br>
        <br><dir>
        Il segno ( <b>+</b> o <b>-</b> ) definisce l'allineamento: con il segno
        + si ha l'allineamento a destra, con il - a sinistra. L'allineamento di
        default &egrave; a destra ( + ) . Il carattere &quot;|&quot; &egrave;
        l'OR (oppure) e sta a significare che i due segni non possono essere usati
        contemporaneamente. <br>
        <br>
Lo &quot;<b>0</b>&quot; (zero) &egrave; il carattere di riempimento, utile
        per i campi numerici. Quando il numero occupa uno spazio minore di quello
        specificato nel formato, lo spazio rimanente viene riempito di spazi (default)
        oppure da zeri (se specificato). Ad esempio, la stringa di formato &quot;%03d&quot; (3 caratteri a disposizone, riempiti da uno <strong>0</strong>) applicata al numero <em>12</em> fornisce il risultato di <em>012</em>. <br>
        <br>
        Il numero <b>n</b> &egrave; il numero minimo di caratteri che devono essere
        riservati al parametro da stampare. Il numeri di caratteri utilizzati
        da un parametro potrebbe anche essere superiore ad n, se il parametro
        li richiede. Ad esempio:<br>
        <dir><span class="esempio">x = 1000;<br>
          printf(&quot;%2d&quot;, x);</span></dir>
        occuper&agrave; 4 caratteri e non i 2 specificati nel formato.<br>
        <br>
        Il punto seguito da un numero &egrave; necessario solo per i numeri decimali;
        <b>m</b> rappresenta il numero di cifre da stampare dopo il punto decimale.
        Ad esempio:
  <dir><span class="esempio"> x = 1000.346;<br>
    printf(&quot;%6.2d&quot;, x);</span></dir>
        stamper&agrave; il numero <em>1000.35</em>. Si faccia attenzione che <b>n</b> rappresenta
        il numero totale di caratteri riservati al parametro, compresi il punto
        decimale e l'eventuale segno. in questo caso sono stati stampati 7 caratteri invece di 6. <br>
        <br>
        Infine <b>X</b> rappresenta il tipo di grandezza da stampare e pu&ograve; essere:<br>
<br>

<ul class="lista">
<li>c 	carattere</li>
<li>d 	numero decimale</li>
<li>x 	numero, che verrà stampato in formato esadecimale</li>
<li>o 	numero, che verrà stampato in formato ottale.</li>
<li>e 	numero, che verrà stampato in formato esponenziale</li>
<li>s 	stringa</li>
</ul>
<br>
</dir>
Il carattere pu&ograve; essere sia minuscolo che maiuscolo.<br>
        <br>
        Il carattere &quot;\n&quot; (new line) verr&agrave; convertito in &quot;&lt;BR&gt;&quot;.<br>
        <br>
        Per stampare i caratteri speciali (% e \) devono essere preceduti dal
        segno &quot;%&quot;. Quindi %% stamper&agrave; un semplice % e non verr&agrave;
        considerato l'inizio di un formato.<br>
        <br>
        Si tenga presente che, per avere effettivamente gli allineamenti desiderati,
        bisogna utilizzare i caratteri a spaziatura fissa.<br>
        <br>
        <br>

<div class="titolino">Esempi</div>
        <br>
        Torniamo all'esempio della precedente tabella.<br>
        <br>
        Per stampare il numero preceduto dallo 0 se ha meno di 2 cifre &egrave;
        stata usata l'istruzione:<br>
        <dir class="esempio"> printf(&quot;%02d&quot;, i);<br>
        </dir>
        Come si vede il primo argomento di printf &egrave; una stringa (stringa
        di formato) in cui %02d sta a significare che il numero successivo deve
        essere stampato occupando 2 caratteri. Lo 0 iniziale indica che, nel caso
        il numero occupi meno di 2 caratteri, il carattere mancante deve essere
        riempito con uno 0.<br>
        <br>
        La seconda colonna &egrave; stata stampata con:<br>
        <dir class="esempio">printf(&quot;%8.5d&quot;, Math.log(i));<br>
        </dir>
        che significa: il logaritmo deve essere stampato occupando in totale 8
        caratteri (compreso il punto decimale), di cui 5 per le cifre decimali.
        Il numero, in realt&agrave;, occuper&agrave; solo 7 caratteri; il carattere
        supplementare (uno spazio) verr&agrave; inserito all'inizio.<br>
        <br>
        La terza colonna &egrave; stata stampata con:<br>
        <dir class="esempio">printf(&quot;%10.4d&quot;, Math.exp(i));<br>
        </dir>
        dal significato analogo al precedente. Come si vede, per&ograve;, il numero
        viene allineato a destra, inserendo tanti spazi quanti sono necessari.<br>
        <br><br>

        L'ultima colonna &egrave; stata stampata con:<br>
        <br>
        <dir class="esempio">printf(&quot;%5.4e&quot;, Math.pow(10,
          i));
        </dir><br>

        la "e" nella stringa di formato impone, appunto, la stampa in formato
        esponenziale. L'esponente viene sempre stampato con il segno e tre caratteri
        eventualmente rimpiti con lo &quot;0&quot;. Il numero deve essere di almeno
        5 caratteri in totale, di cui 4 decimali. &Egrave; evidente che il numero
        non potr&agrave; occupare solo 5 caratteri; il numero verr&agrave; stampato
        senza spazi aggiuntivi per la formattazione.<br>
        <br>
        In questo ulteriore esempio viene stampato il codice HTML per costruire
        una tabella di nomi, allineando le stringhe a sinistra e i numeri a destra.<br>
        <br>
<script>
var head = '<table class="tabella">';

var riga = '<tr>' +
    '<td>%-10s</td>' +
    '<td>%-10s</td>' +
    '<td>Lire %d</td>' +
    '<td>&euro; %5.2d</td>' +
  '</tr>';

var foot = '</table>';

var persone = new Array(
	"Rossi", "Alberto", 18300,
	"Bianchini", "Roberto", 32730,
	"Franchi", "Giuseppe", 42750);

printf(head);
 for (var i = 0; i < persone.length; i += 3)
	printf(riga, persone[i], persone[i + 1], persone[i + 2], persone[i + 2] / 1936.27);

printf(foot);
</script>

<br>
        <br>
        Ed &egrave; stato ottenuto con <br>
        <dir class=esempio>
        var head = '&lt;table class="tabella"&gt;';<br>
        var riga = '&lt;tr&gt;' +
        <dir> '&lt;td&gt;%-10s&lt;/td&gt;' +<br>
            '&lt;td&gt;%-10s&lt;/td&gt;' +<br>
            '&lt;td&gt;Lire %d&lt;/td&gt;' +<br>
            '&lt;td&gt;&amp;euro; %5.2d&lt;/td&gt;' + '&lt;/tr&gt;';<br>
            <br>
         </dir>
         var foot = '&lt;/table&gt;';<br>
         var persone = new Array(
         <dir>"Rossi", "Alberto", 18300,<br>
            "Bianchini", "Roberto", 32730,<br>
            "Franchi", "Giuseppe", 42750);<br>
            <br>
          </dir>
          printf(head);<br>
          for (var i = 0; i &lt; persone.length; i += 3)
          <dir> printf(riga, persone[i], persone[i + 1],<br>
            persone[i + 2], persone[i + 2] / 1936.27);</dir>
          printf(foot);</dir>
        <br></dir>
        Lo stesso elenco, con gli stessi allineamenti poteva essere fatto senza
        costruire la table:<br>
        <br>
<dir class="esempio"><pre>
<script>
for (var i = 0; i < persone.length; i += 3) {
    printf("%-10s %-10s Lire: %5d&nbsp;\t&euro;%6.2d\n", persone[i], persone[i + 1], persone[i + 2], persone[i + 2] / 1936.27);
}
</script></pre>
</dir>
<br>
con il pi&ugrave; semplice script:<br>
        <dir class="esempio">for (var i = 0; i < persone.length; i += 3)
          <dir>printf("%-10s %-10s Lire: %5d\t&amp;euro; %6.2d\n",
            persone[i],<br>
            persone[i + 1], persone[i + 2], persone[i + 2] / 1936.27);</dir>
        </dir>
<br>
<span class="esempio" style="float:right; display: inline-block ;border:1px solid #000; margin-left: 8px; padding:6px;">
<script>
for (var i = 10; i < 24; i += 2)
    printf("%2d 0x%02x %03o\n", i, i, i);
</script>
</span>

<script>
    function f(x) {
        return Math.sin(x * 4.5 * Math.PI / 180);
    }

    function graph(values, maxval, n) {
        var bgcol = "#0000FF";
        var row = '<table border="0" cellspacing="0" cellpadding="0"><tr>'
        row += '<td class=dmx width=%d height=1>&nbsp;</td><td class=dmx width=1 height=1 bgcolor=%s>&nbsp;</td></tr></table>';
        var wmax = 100;
        var x;

        printf('<table width="'+ 2 * wmax + '" border="0" cellspacing="0" cellpadding="0">');
        for (var i = 0; i < n; i++) {
            var x = wmax + values(i) * wmax / maxval;
            printf('<tr><td>' + row + '</td></tr>', x, bgcol);
        }
        printf("</td></tr></table>");
    }
        // graph(f, 1, 80);
</script>


Quest'altro esempio mette in evidenza la facilità con cui si possono
        fare le conversioni di formato:<br>
        <br>
        La tabella di destra riporta un numero decimale nella prima colonna, il
        corrispondente esadecimale nella seconda e l'ottale nella terza. È stata
        costruita soltanto con le istruzioni:<br>
        <dir class="esempio">for (var i = 10; i < 24; i += 2)
          <dir> printf("%2d 0x%02x %03o\n", i, i, i);</dir>
        </dir>
        <br>
        E infine, dulcis in fundo, il grafico di una sinusoide:<br>
        <br>
       <div style="background-color: #F4F4FF; margin: auto; border: 1px solid #000; display: table">
<script>
    graph(f, 1, 80);
</script>
</div>
<br>
<br>
Senza addendrarci nei particolari, la parte centrale dello script &egrave;:<br>
<dir class=esempio>for (var i = 0; i < n; i++) {
<dir>var x = wmax + values(i) * wmax / maxval;<br>
printf('&lt;tr&gt;&lt;td&gt;' + row + '&lt;/td&gt;&lt;/tr&gt;', x, bgcol);</dir>
}</dir>
<br>
<br>
<div class="titolino">sprintf</div>
<br>
<b><i>sprintf()</i></b> formatta una serie di parametri, analogamente a <b><i>printf</i></b>,
    ma, invece di stampare la stringa formattata, la riporta, cosicch&eacute;
    possa essere memorizzata in una stringa. Del tutto simile a printf(), ha
      la seguente sintassi:<br>
      <dir class="esempio">variabile = sprintf(&quot;stringa di formato&quot;,
        parametro1, parametro2, ...);</dir>
    Ad esempio:<br>
      <dir class=esempio> function linkIt(str, url, target) {
        <dir> return sprintf('&lt;a href=&quot;%s&quot; target=&quot;%s&quot;&gt;%s&lt;/a&gt;',
          url, target, str);        </dir>
        }<br>
        <br>
        a = &quot;Clicca per continuare&quot;;<br>
        a = linkIt(a, &quot;http://www.google.com&quot;, &quot;newwin&quot;);<br>
      </dir>
<br><br>
</div>
</body>
</html>
